"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.METRIC_TYPES = exports.METRIC_TYPE_PERCENTAGE = exports.METRIC_TYPE_SCORE = exports.METRIC_TYPE_NUMERIC = exports.METRIC_TYPE_DURATION = exports.METRIC_TYPE_FILE_SIZE = void 0;

var _format = require("../utils/format");

const METRIC_TYPE_FILE_SIZE = 'METRIC_TYPE_FILE_SIZE';
exports.METRIC_TYPE_FILE_SIZE = METRIC_TYPE_FILE_SIZE;
const METRIC_TYPE_DURATION = 'METRIC_TYPE_DURATION';
exports.METRIC_TYPE_DURATION = METRIC_TYPE_DURATION;
const METRIC_TYPE_NUMERIC = 'METRIC_TYPE_NUMERIC';
exports.METRIC_TYPE_NUMERIC = METRIC_TYPE_NUMERIC;
const METRIC_TYPE_SCORE = 'METRIC_TYPE_SCORE';
exports.METRIC_TYPE_SCORE = METRIC_TYPE_SCORE;
const METRIC_TYPE_PERCENTAGE = 'METRIC_TYPE_PERCENTAGE';
exports.METRIC_TYPE_PERCENTAGE = METRIC_TYPE_PERCENTAGE;
const METRIC_TYPES = {
  [METRIC_TYPE_NUMERIC]: {
    biggerIsBetter: false,
    formatter: _format.formatNumber
  },
  [METRIC_TYPE_SCORE]: {
    biggerIsBetter: true,
    formatter: _format.formatNumber
  },
  [METRIC_TYPE_DURATION]: {
    biggerIsBetter: false,
    formatter: _format.formatDuration
  },
  [METRIC_TYPE_FILE_SIZE]: {
    biggerIsBetter: false,
    formatter: _format.formatFileSize
  },
  [METRIC_TYPE_PERCENTAGE]: {
    biggerIsBetter: true,
    formatter: _format.formatPercentage
  }
};
exports.METRIC_TYPES = METRIC_TYPES;